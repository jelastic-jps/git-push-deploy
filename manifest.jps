type: update
version: 1.7
id: git-push-deploy
name: Git-Push-Deploy Add-On
homepage: https://jelastic.com/blog/git-push-deploy-to-containers/
baseUrl: https://raw.githubusercontent.com/jelastic-jps/git-push-deploy/master
description:
  text: /text/description.md
  short: Simple CI/CD pipeline for Git projects.
logo: https://raw.githubusercontent.com/jelastic-jps/git-push-deploy/master/images/ci-cd-icon.png

targetEditions: [ "devops", "wordpress", "lite_do", "lite_vultr", "lite_gc", "ultimate", "light", "business" ]

targetNodes:
  nodeType:
  - apache
  - apache2
  - apache2-ruby
  - apache-python
  - apache2-python
  - apache-ruby
  - glassfish
  - glassfish3
  - glassfish4
  - golang
  - javaengine
  - jboss7
  - jetty6
  - jetty8
  - jetty9
  - nginxphp-dockerized
  - nginxphp
  - nginx-ruby
  - nginxruby
  - nodejs
  - payara
  - springboot
  - tomcat
  - tomcat7
  - tomcat85
  - tomcat6
  - tomcat9
  - tomee-dockerized
  - tomee
  - wildfly10
  - wildfly11
  - wildfly
  - wildfly9
  - wildfly-auto-cluster 
  - litespeedphp
  - lemp
  - llsmp
  
settings:
  fields:
  - name: gitRepo
    caption: Git Repo Url
    type: string
    default: ''
    required: 'true'
    regex: "^https?:\\/\\/.+$"
    regexText: Incorrect URL. HTTPS link to Git repository is required.
  - name: gitBranch
    caption: Branch
    type: string
    default: master
    required: 'true'
  - name: gitUser
    caption: User
    type: string
    default: ''
    required: 'true'
  - name: gitToken
    caption: Token
    type: string
    default: ''
    required: true

globals:
  scriptName: git-push-redeploy

onInstall:
  script: /scripts/check-deployment-type.cs?_r=${fn.random}
  next: setup

onBeforeDelete: delete-redeploy-script
onUninstall: delete-redeploy-script
  
actions:
  setup:
    - if ('${this.addon}' == 'maven'): 
      - if (!nodes.build): 
          addNodes: 
              cloudlets: 16
              nodeGroup: build
              nodeType: maven3
              displayName: Build Node
              groupDisplayName: Build Nodes
              metadata:
                layer: build
      - add-build-project

    - if ('${this.addon}' == 'vcs'): 
        add-vcs-project:
          type: ${this.type}
        
    - create-redeploy-script


  create-redeploy-script:
    script: /scripts/create-redeploy-script.cs?r_${fn.random}
    url: ${baseUrl}/scripts/redeploy.cs
    targetEnv: ${env.envName}
    nodeGroup: cp
    next: web-hook

  web-hook:
    script: /scripts/add-web-hook.cs?r_${fn.random}
    params:
      scriptName: ${globals.scriptName}
      user: ${settings.gitUser}
      repo: ${settings.gitRepo}
      token: ${settings.gitToken}
      callbackUrl: ${this.host}/${env.envName}-${globals.scriptName}?token=${this.token}&action=rebuild&appid=${this.appid}
      envName: ${env.envName}
      act: ${this.act}
 
  add-vcs-project:
    script: /scripts/add-vcs-project.cs?r_${fn.random}
    params:
      url: ${settings.gitRepo}
      branch: ${settings.gitBranch}
      user: ${settings.gitUser}
      token: ${settings.gitToken}
      type: ${this.type}
      
  add-build-project:
    script: /scripts/add-build-project.cs?r_${fn.random}
    params:
      name: ${globals.scriptName}
      url: ${settings.gitRepo}
      branch: ${settings.gitBranch}
      login: ${settings.gitUser}
      password: ${settings.gitToken}
      targetEnv: ${env.envName}
      
  delete-redeploy-script:
    - script: |
        return api.dev.scripting.DeleteScript({
          appid: api.dev.apps.CreatePersistence ? "${env.appid}" : appid,
          name: "${env.envName}-${globals.scriptName}"
        });
    - jelastic.dev.scripting.DeleteScript:
        name: ${env.envName}-${globals.scriptName}
    - web-hook:
        act: delete
    - if (nodes.build): 
        api: env.control.RemoveNode
        nodeid: ${nodes.build.master.id}
        
success: /text/success.md
